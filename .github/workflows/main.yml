name: Deploy Next.js App

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build Next.js app
        run: pnpm build

      - name: Prepare deployment artifacts
        run: |
          mkdir -p deploy
          cp -r .next public package.json pnpm-lock.yaml deploy/

      - name: Upload build files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ github.ref == 'refs/heads/main' && secrets.SERVER_HOST_PROD || secrets.SERVER_HOST_STAGING }}
          username: ${{ github.ref == 'refs/heads/main' && secrets.SERVER_USER_PROD || secrets.SERVER_USER_STAGING }}
          key: ${{ github.ref == 'refs/heads/main' && secrets.SSH_PRIVATE_KEY_PROD || secrets.SSH_PRIVATE_KEY_STAGING }}
          source: deploy/
          target: /root/Projects/Chromamind/web-app

      - name: SSH commands to install and restart pm2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ github.ref == 'refs/heads/main' && secrets.SERVER_HOST_PROD || secrets.SERVER_HOST_STAGING }}
          username: ${{ github.ref == 'refs/heads/main' && secrets.SERVER_USER_PROD || secrets.SERVER_USER_STAGING }}
          key: ${{ github.ref == 'refs/heads/main' && secrets.SSH_PRIVATE_KEY_PROD || secrets.SSH_PRIVATE_KEY_STAGING }}
          envs: PORT_STAGING,PORT_PROD,NEXT_PUBLIC_PROJECT_ID
          script: |
            cd /root/Projects/Chromamind/web-app
            git checkout ${{ github.ref == 'refs/heads/main' && 'main' || 'dev' }}
            git pull origin ${{ github.ref == 'refs/heads/main' && 'main' || 'dev' }}
            pnpm install --prod

            if [ "${{ github.ref }}" == "refs/heads/main" ]; then
              pm2 restart web-app-prod || PORT=$PORT_PROD pm2 start pnpm --name "web-app-prod" -- start
            else
              pm2 restart web-app-dev || PORT=$PORT_STAGING pm2 start pnpm --name "web-app-dev" -- start
            fi
