name: Deploy Next.js App

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build Next.js app
        # Make the secret available as an environment variable for the build command
        env:
          NEXT_PUBLIC_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_PROJECT_ID}}
        run: pnpm build

      - name: Upload build files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ github.ref == 'refs/heads/main' && secrets.SERVER_HOST_PROD || secrets.SERVER_HOST_STAGING }}
          username: ${{ github.ref == 'refs/heads/main' && secrets.SERVER_USER_PROD || 'ubuntu' }}
          key: ${{ github.ref == 'refs/heads/main' && secrets.SSH_PRIVATE_KEY_PROD || secrets.SSH_PRIVATE_KEY_STAGING }}
          source: ".next,public,package.json,pnpm-lock.yaml"
          target: ${{ github.ref == 'refs/heads/main' && '/root/Projects/Chromamind/web-app' || '/home/ubuntu/Projects/Chromamind/web-app' }}

      - name: SSH commands to install and restart pm2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ github.ref == 'refs/heads/main' && secrets.SERVER_HOST_PROD || secrets.SERVER_HOST_STAGING }}
          username: ${{ github.ref == 'refs/heads/main' && secrets.SERVER_USER_PROD || 'ubuntu' }}
          key: ${{ github.ref == 'refs/heads/main' && secrets.SSH_PRIVATE_KEY_PROD || secrets.SSH_PRIVATE_KEY_STAGING }}
          # Pass secrets to the remote server script
          script: |
            # Navigate to the application directory
            cd ${{ github.ref == 'refs/heads/main' && '/root/Projects/Chromamind/web-app' || '/home/ubuntu/Projects/Chromamind/web-app' }}
            
            # Install production dependencies
            pnpm install --prod

            # Check which branch was pushed and run the corresponding command
            if [ "${{ github.ref }}" == "refs/heads/main" ]; then
              # Production: Use production port and restart or start the app
              pm2 restart web-app-prod || PORT=${{ secrets.PORT_PROD }} pm2 start pnpm --name "web-app-prod" -- start
            else
              # Staging: Use staging port and restart or start the app
              pm2 restart web-app-dev || PORT=${{ secrets.PORT_STAGING }} pm2 start pnpm --name "web-app-dev" -- start
            fi
            
            # Save the pm2 process list
            pm2 save
